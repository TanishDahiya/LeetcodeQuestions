//287. Find the Duplicate Number

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        //second approach linked list cyclic mehtod
        // fast And slow pointer points at starting or 0 th index
        //now when both they meet
        //again fast points to 0th position or starting 
        //slow is at current position
        //again when they meet duplicate found
        // 1 3 4 2 2--->
        //LL looks like this   2 5 9 6 9 3 8 9 7 1
        //do while is used in this question
        int slow=nums[0];
        int fast=nums[0];
        
       do{
            slow=nums[slow];
            fast=nums[nums[fast]];
            
        } while(slow!=fast);
        fast=nums[0];
        while(slow!=fast){
            slow=nums[slow];
            fast=nums[fast];
        }
        return slow;
    }
};
